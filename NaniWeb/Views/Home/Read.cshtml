@using NaniWeb.Data
@inject SettingsKeeper SettingsKeeper

@{
    var siteUrl = SettingsKeeper.GetSetting("SiteUrl").Value;
    var series = (Series) ViewData["Series"];
    var seriesList = (Series[]) ViewData["SeriesList"];
    var chapters = (LinkedList<Chapter>) ViewData["Chapters"];
    var chapter = (Chapter) ViewData["Chapter"];
    var pages = (Page[]) ViewData["Pages"];
    var lastPage = pages.Last();
    var prevChapter = ViewData["PrevChapter"] as Chapter;
    var nextChapter = ViewData["NextChapter"] as Chapter;
    var readerMode = (Series.SeriesType) ViewData["ReaderMode"];

    ViewData["Title"] = $"Chapter {chapter.ChapterNumber} - {series.Name}";
    ViewData["DisqusUrl"] = $"{SettingsKeeper.GetSetting("SiteUrl").Value}{Url.Action("Project", new {urlSlug = series.UrlSlug, chapterNumber = chapter.ChapterNumber})}";
    ViewData["DisqusIdentifier"] = $"series_{series.UrlSlug}_chapter_{chapter.ChapterNumber}";
    ViewData["DisqusTitle"] = $"Chapter {chapter.ChapterNumber} - {series.Name} - {SettingsKeeper.GetSetting("SiteName").Value}";
}

@section Header
{
    <meta property="og:site_name" content="@ViewData["SiteName"]"/>
    <meta property="og:title" content="@(chapter.Volume > 0 ? $"Vol. {chapter.Volume} " : string.Empty)Ch. @(chapter.ChapterNumber)@(string.IsNullOrEmpty(chapter.Name) ? string.Empty : $" - {chapter.Name}") - @series.Name - @ViewData["SiteName"]"/>
    <meta property="og:image" content="@($"{siteUrl}/images/covers/{series.Id}_small.png")"/>
    <meta property="og:url" content="@($"{siteUrl}{Url.Action("Project", new {urlSlugs = series.UrlSlug})}")"/>
    <meta property="og:description" content="@series.Synopsis"/>
    <meta property="og:type" content="website"/>
    <partial name="_GoogleAnalytics"/>

    @if (readerMode == Series.SeriesType.Webtoon)
    {
        <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.3/css/all.css" integrity="sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/" crossorigin="anonymous">
    }
}

<partial name="_HomeNav"/>

<div id="top" class="container my-2 border border-secondary rounded">
    @if (readerMode == Series.SeriesType.Manga)
    {
        <div class="row">
            <div class="col-md-4 my-1 px-1">
                <select id="series_selector" class="custom-select">
                    @foreach (var srs in seriesList)
                    {
                        <option value="@Url.Action("Project", new {urlSlug = srs.UrlSlug, chapterNumber = string.Empty})" selected="@(srs == series ? "selected" : null)">@srs.Name</option>
                    }
                </select>
            </div>
            <div class="col-md-4 my-1 px-1">
                <select id="chapter_selector" class="custom-select">
                    @foreach (var chap in chapters)
                    {
                        <option value="@Url.Action("Project", new {urlSlug = series.UrlSlug, chapterNumber = chap.ChapterNumber})" selected="@(chap == chapter ? "selected" : null)">@(chap.Volume > 0 ? $"Vol. {chap.Volume} " : string.Empty)Ch. @(chap.ChapterNumber)@(string.IsNullOrEmpty(chap.Name) ? string.Empty : $" - {chap.Name}")</option>
                    }
                </select>
            </div>
            <div class="col-md-4 my-1 px-1 d-inline-flex flex-nowrap">
                <select id="page_selector" class="custom-select mw-50 w-100 mr-3">
                    @foreach (var chPage in pages)
                    {
                        <option value="@chPage.PageNumber">Page @(chPage.PageNumber + 1)</option>
                    }
                </select>
                <select id="mode_selector" class="custom-select mw-50 w-100">
                    @foreach (var mode in Enum.GetNames(typeof(Series.SeriesType)))
                    {
                        <option value="@mode" selected="@(mode == readerMode.ToString() ? "selected" : null)">@(mode == Series.SeriesType.Manga.ToString() ? "Single page" : "Long strip")</option>
                    }
                </select>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-sm-5 my-1 px-1">
                <select id="series_selector" class="custom-select w-100">
                    @foreach (var srs in seriesList)
                    {
                        <option value="@Url.Action("Project", new {urlSlug = srs.UrlSlug, chapterNumber = string.Empty})" selected="@(srs == series ? "selected" : null)">@srs.Name</option>
                    }
                </select>
            </div>
            <div class="col-sm-5 my-1 px-1">
                <select id="chapter_selector" class="custom-select w-100">
                    @foreach (var chap in chapters)
                    {
                        <option value="@Url.Action("Project", new {urlSlug = series.UrlSlug, chapterNumber = chap.ChapterNumber})" selected="@(chap == chapter ? "selected" : null)">@(chap.Volume > 0 ? $"Vol. {chap.Volume} " : string.Empty)Ch. @(chap.ChapterNumber)@(string.IsNullOrEmpty(chap.Name) ? string.Empty : $" - {chap.Name}")</option>
                    }
                </select>
            </div>
            <div class="col-sm-2 my-1 px-1">
                <select id="mode_selector" class="custom-select w-100">
                    @foreach (var mode in Enum.GetNames(typeof(Series.SeriesType)))
                    {
                        <option value="@mode" selected="@(mode == readerMode.ToString() ? "selected" : null)">@(mode == Series.SeriesType.Manga.ToString() ? "Single page" : "Long strip")</option>
                    }
                </select>
            </div>
        </div>
    }
    <form id="form_mode" class="d-none" action="@Url.Action("Project", new {urlSlug = series.UrlSlug, chapterNumber = chapter.ChapterNumber})" method="post">
        <input type="hidden" id="mode_input" name="mode" value=""/>
    </form>
</div>
<div id="pages" class="container my-2 p-0 mw-100" style="position: relative;">

    @if (readerMode == Series.SeriesType.Manga)
    {
        <div id="load_spinner" class="d-none justify-content-center">
            <div class="spinner spinner-border text-success" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        </div>
        <img id="manga_page" class="img-fluid mx-auto d-block clickable" src="~/images/pages/@($"{pages[0].Id}.png")" alt="">
    }
    else
    {
        foreach (var chPage in pages)
        {
            <img class="img-fluid mx-auto d-block @(series.Type == Series.SeriesType.Manga ? "my-2" : string.Empty)" src="~/images/pages/@($"{chPage.Id}.png")" alt=""/>
        }
    }
</div>
<div class="container my-2 border border-secondary rounded">
    <div class="row">
        <div class="col-2 my-1 px-1 text-center">
            @if (prevChapter != null)
            {
                <a class="btn btn-sm btn-success" href="@Url.Action("Project", new {urlSlug = series.UrlSlug, chapterNumber = prevChapter.ChapterNumber})">Prev</a>
            }
            else
            {
                <a class="btn btn-sm btn-success disabled">Prev</a>
            }
        </div>
        <div class="col-8 my-auto text-center text-truncate">
            <a class="my-auto" href="@Url.Action("Project", new {urlSlug = series.UrlSlug, chapterNumber = string.Empty})">@series.Name</a>
        </div>
        <div class="col-2 my-1 px-1 text-center">
            @if (nextChapter != null)
            {
                <a class="btn btn-sm btn-success" href="@Url.Action("Project", new {urlSlug = series.UrlSlug, chapterNumber = nextChapter.ChapterNumber})">Next</a>
            }
            else
            {
                <a class="btn btn-sm btn-success disabled">Next</a>
            }
        </div>
    </div>
</div>

@if (bool.Parse(SettingsKeeper.GetSetting("EnableDisqus").Value))
{
    <div id="bottom" class="container my-2 rounded border border-secondary disqus-container">
        <partial name="_DisqusDiv"/>
    </div>
}

@if (readerMode == Series.SeriesType.Webtoon)
{
    <div>
        <a class="to-top btn btn-lg btn-success text-white fas fa-chevron-up" id="to_top"></a>
    </div>
}

@section Body
{
    <partial name="_DisqusScript"/>

    <script>
        $("#projects").addClass("active");

        $("#series_selector, #chapter_selector").change(function() {
            window.location = this.value;
        });
        
        $("#mode_selector").change(function() {
            $("#mode_input").val(this.value)
            $("#form_mode").submit();
        });
    </script>

    @if (readerMode == Series.SeriesType.Manga)
    {
        <script>
            const nextAddress =
                "@Html.Raw(chapter == chapters.First() ? Url.Action("Project", new {urlSlug = series.UrlSlug, chapterNumber = string.Empty}) : Url.Action("Project", new {urlSlug = series.UrlSlug, chapterNumber = nextChapter?.ChapterNumber}))";
            const page = $("#manga_page");
            var index = 0;

            const pages = [
                @foreach (var chPage in pages)
                {
                    @Html.Raw($"\"/images/pages/{chPage.Id}.png\"{(chPage == lastPage ? string.Empty : ",")}")
                }
            ];

            $(function() {
                nextPreload();
            });

            $("#pages").click(function(e) {
                const pWidth = $(this).innerWidth();
                const pOffset = $(this).offset();
                const x = e.pageX - pOffset.left;
                if (pWidth / 2 > x)
                    previous();
                else
                    next();
            });

            $("#manga_page").on("load",
                function() {
                    removeBlur();
                });

            $("#page_selector").change(function() {
                blur();
                index = this.value;

                page.attr("src", pages[index]);
                nextPreload();
                previousPreload();
            });
        </script>
    }
    else
    {
        <script>
            $("#to_top").click(function() {
                scrollToTop();
            });
        </script>
    }
}